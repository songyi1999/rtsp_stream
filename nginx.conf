worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    # 添加默认字符集
    charset utf-8;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       443 ssl;
        server_name  rtsp.xinpanmen.com;

        # 设置字符集
        charset utf-8;
        
        # 确保 HTML 文件使用正确的 Content-Type
        default_type text/html;

        # SSL证书配置
        ssl_certificate      D:/nginx/ssl/rtsp.xinpanmen.com_bundle.crt;
        ssl_certificate_key  D:/nginx/ssl/rtsp.xinpanmen.com.key;

        # 修改 SSL 配置，增加兼容性
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;  # 添加更多协议支持
        
        # 使用更通用的加密套件
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA;
        
        ssl_prefer_server_ciphers on;  # 改为 on
        
        # 添加 HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;
        
        # 启用 OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # 添加安全相关的响应头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # 静态文件目录
        root D:/nginx/html;  # 修改为你的实际目录

        # 首页
        location = / {
            try_files /index.html =404;
        }

        # 静态文件
        location /static/ {
            alias D:/nginx/html/static/;  # 修改为你的实际静态文件目录
            expires 30d;  # 添加缓存
            add_header Cache-Control "public, no-transform";
            # 添加正确的 Content-Type
            types {
                text/html                             html htm shtml;
                text/css                              css;
                text/javascript                       js;
                application/x-javascript              js;
            }
        }

        # API 请求转发到 Node.js
        location /api/ {
            proxy_pass http://localhost:8866/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 反向代理 WebSocket
        location /ws {
            proxy_pass http://localhost:9988;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 特定的超时设置
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }
    }

   
}